# Generated by Django 3.1.1 on 2020-11-10 04:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DataEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habits', to=settings.AUTH_USER_MODEL)),
                ('viewers', models.ManyToManyField(blank=True, default=None, related_name='viewingUsers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MainHabit',
            fields=[
                ('habit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='habits.habit')),
            ],
            bases=('habits.habit',),
        ),
        migrations.CreateModel(
            name='QualitiativeData',
            fields=[
                ('dataentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='habits.dataentry')),
                ('content', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
            bases=('habits.dataentry',),
        ),
        migrations.CreateModel(
            name='QuantitativeData',
            fields=[
                ('dataentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='habits.dataentry')),
                ('content', models.TextField()),
            ],
            bases=('habits.dataentry',),
        ),
        migrations.CreateModel(
            name='ViewRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('associatedHabit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pendingRequests', to='habits.habit')),
                ('recievingUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recievedRequests', to=settings.AUTH_USER_MODEL)),
                ('sendingUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentRequests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
                ('associatedHabit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataSet', to='habits.habit')),
            ],
        ),
        migrations.AddField(
            model_name='dataentry',
            name='parentSet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataEntries', to='habits.dataset'),
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.IntegerField(default=10)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='activityLog', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300)),
                ('parentLog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='habits.activitylog')),
            ],
        ),
        migrations.CreateModel(
            name='SubHabit',
            fields=[
                ('habit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='habits.habit')),
                ('mainHabit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subhabits', to='habits.mainhabit')),
            ],
            bases=('habits.habit',),
        ),
    ]
